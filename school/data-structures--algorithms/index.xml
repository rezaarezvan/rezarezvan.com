<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data Structures &amp; Algorithms on rezvan</title><link>https://rezvan.xyz/school/data-structures--algorithms/</link><description>Recent content in Data Structures &amp; Algorithms on rezvan</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 26 May 2024 11:09:10 +0200</lastBuildDate><atom:link href="https://rezvan.xyz/school/data-structures--algorithms/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 4 - Abstract Data Types</title><link>https://rezvan.xyz/school/dat038/dat038_4/</link><pubDate>Mon, 28 Nov 2022 20:30:47 +0100</pubDate><guid>https://rezvan.xyz/school/dat038/dat038_4/</guid><description>ADT vs Data Structures So, what&amp;rsquo;s the difference between an Abstract Data Type and an actual data structure?
An ADT is a kind of specification of something - it specifies how we can interact with that object, like an API.
It consists of methods and constructors but also plain-text specifications (like the complexity for example) and explanations.
A data structure on the other hand is an actual implementation of an ADT.</description></item></channel></rss>